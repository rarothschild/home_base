---
interface Props {
	title: string;
}

const { title } = Astro.props;

import Hexagon from '../components/Hexagon.astro';
import '../styles/global.css';

// Hexagon bacground props
const rows = 4
const cols = 40
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
			crossorigin="anonymous"
		/>
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="h-full overflow-x-clip">
		<div class="flex flex-col p-4 w-full overflow-y-auto 
					absolute left-1/2 transform -translate-x-1/2 max-w-5xl 
					text-white z-10">
			<!-- Header -->
			<div class="flex justify-between w-full">
				<!-- Name & Nav -->
				<div class="flex place-items-end gap-8">
					<h1 class="font-bold text-4xl text-black">Rob Rothschild</h1>
					<nav class="flex border-2 border-b-0 border-zinc-300">
						<a href="/" class="block px-4 py-0 font-bold text-lg
							bg-stone-800 text-gray-200 hover:bg-gray-700 hover:text-white ">Home</a>
						<a href="/portfolio/base_defender" class="block px-4 py-0 font-bold text-lg
							bg-stone-800 text-gray-200 hover:bg-gray-700 hover:text-white ">Portfolio</a>
						<a href="/portfolio/resume" class="block px-4 py-0 font-bold text-lg
							bg-stone-800 text-gray-200 hover:bg-gray-700 hover:text-white ">Resume</a>
					</nav>
				</div>
				<!-- Icons -->
				<div class="flex gap-2 place-items-end">
					<a href="" class="w-6 h-6">
						<span class="icon "><i class="fab fa-github fa-xl"></i></span>
					</a>
					<a href="" class="flex button is-small is-linkedin">
						<span class="icon"><i class="fab fa-linkedin fa-xl"></i></span>
					</a>
					<a href="" class="flex button is-small is-instagram">
						<span class="icon"><i class="fab fa-instagram fa-xl"></i></span>
					</a>
				</div>
			</div>
			<!-- Content -->
			<main class="w-full border-2 z-10 shadow-xl">
				<slot />
			</main>
		</div>
		<!-- Hex grid background -->
		<div class="hex-grid fixed z-0 bottom-[-2rem] left-[-5rem]">
			{Array.from({ length: rows }).map((_, rowIndex) => (
				<div class={`hex-row ${rowIndex % 2 !== 0 ? 'offset' : ''}`}>
				{Array.from({ length: cols }).map(() => (
					<Hexagon />
				))}
				</div>
			))}
		</div>
	</body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
		--hex-width: 75px; /* Width of each hexagon */
		--hex-height: calc(var(--hex-width) * 1.1547); /* Height based on 30Â° angle */
  		--hex-spacing: 10px; /* Adjust the spacing between hexagons here */
	}
	html {
		height: 100%;
  		margin: 0;
	}
	body {
		font-family: system-ui, sans-serif;
		/* background: #1e1e31; */
		background: linear-gradient(to bottom, #feb47b, #f87656); /* Orange */
		/* background: linear-gradient(to bottom, #ff7e5f, #feb47b); Orange */
	}
	main {
		background: #3c3f47;
		border-color: #c3cacc;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	.hex-grid {
	display: flex;
	flex-direction: column;
	}

	.hex-row {
	display: flex;
	}

	.hex-row.offset {
	margin-left: calc(var(--hex-width) / 2 + var(--hex-spacing) / 2);
	}

	.hex {
	width: var(--hex-width);
	height: var(--hex-height);
	background-color: #d15d49; /* Tomato color, change as desired */
	clip-path: polygon(
		50% 0%,
		100% 25%,
		100% 75%,
		50% 100%,
		0% 75%,
		0% 25%
	);
	transition: transform 0.5s;
	}

	.hex:hover {
	transform: scale(0.8); /* Shrink hexagon on hover */
	}

	/* Adjust spacing between hexagons in the same row */
	.hex + .hex {
	margin-left: var(--hex-spacing);
	}

	/* Adjust spacing between rows */
	.hex-row + .hex-row {
	margin-top: calc(var(--hex-height) * -0.2);
	}
</style>
